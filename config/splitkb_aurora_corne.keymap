/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_nb.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        Layer_Hold_Tap: Layer_Hold_Tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        Hold_Tap_KP: Hold_Tap_KP {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        Layer2 {
            bindings = <&mo 2>;
            key-positions = <36 37>;
        };
    };

    macros {
        Change_Q: Change_Q {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp NB_E>;
            label = "CHANGE_Q";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&Hold_Tap_KP TAB ESC  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y                     &kp U                        &kp I      &kp O    &kp P           &Hold_Tap_KP NB_QUESTION NB_A_RING
&kp LEFT_SHIFT        &kp A  &kp S  &kp D     &kp F  &kp G        &kp H                     &kp J                        &kp K      &kp L    &kp NB_O_SLASH  &kp NB_AE
&kp LEFT_CONTROL      &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N                     &kp M                        &kp COMMA  &kp DOT  &kp SLASH       &Hold_Tap_KP LS(NON_US_HASH) NON_US_HASH
                                    &kp LGUI  &mo 1  &kp SPACE    &Hold_Tap_KP LSHFT ENTER  &Layer_Hold_Tap 2 BACKSPACE  &mo 3
            >;
        };

        Symbols_Numpad {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB          &kp LS(N1)           &kp LS(NUMBER_2)      &kp LS(POUND)          &kp LS(DOLLAR)  &kp LS(PERCENT)     &kp NB_N7  &kp NB_N8  &kp NB_N9  &trans         &Hold_Tap_KP NB_PLUS LS(N0)  &kp DELETE
&kp LEFT_SHIFT   &kp LS(N6)           &kp LS(NUMBER_7)      &kp RA(NUMBER_2)       &kp LS(N8)      &kp LS(NUMBER_9)    &kp NB_N4  &kp NB_N5  &kp NB_N6  &trans         &kp EQUAL                    &kp NB_UMLAUT
&kp NON_US_BSLH  &kp LS(NON_US_BSLH)  &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)  &kp RA(N7)      &kp RA(NUMBER_0)    &kp NB_N1  &kp NB_N2  &kp NB_N3  &kp NB_PERIOD  &trans                       &trans
                                                            &kp LGUI               &trans          &kp SPACE           &kp NB_N0  &trans     &trans
            >;
        };

        Functions {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none        &kp F1  &kp F2      &kp F3             &kp F4            &kp F5       &kp F6   &kp F7          &kp F8    &kp F9     &kp F10          &kp F11
&kp LG(TAB)  &none   &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &none        &kp INS  &kp HOME        &kp UP    &kp END    &trans           &trans
&none        &none   &kp C_PREV  &kp C_NEXT         &kp C_PLAY_PAUSE  &none        &kp F13  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)
                                 &kp LGUI           &trans            &kp SPACE    &kp RET  &trans          &trans
            >;
        };

        BT_Layer {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &Change_Q  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans     &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans          &trans     &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans        &trans          &trans     &trans  &trans
            >;
        };
    };
};
